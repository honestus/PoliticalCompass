import os

initialized = False

def initialize():

 json_path = './data/dataset_whole/raw_data/'

 dict_directory= '../../data/dataset_whole/'
 post_id_filename = 'post_id_dict.json'
 subreddit_id_filename = 'subreddit_id_dict.json'
 subreddit_to_subredditid_filename = 'subreddit_id_to_subreddit_dict.json'
 comment_id_filename = 'comments_ids_dict.json'
 author_id_filename = 'authors_id.json'
 author_flair_id_filename = 'author_flair_dict.json'
 link_id_filename = 'link_id_dict.json'
 parent_id_filename = 'parent_id_dict.json'
 vader_lexicon_file = os.path.abspath( os.path.join(os.path.dirname(__file__), './', 'data', 'vader_lexicon.txt') )

 default_urls_colname = 'urls'
 default_emojis_colname = 'emojis'
 default_emoticons_colname = 'emoticons'
 default_mentions_colname = 'mentions'
 default_hashtags_colname = 'hashtags'
 default_badwords_colname = 'badwords'
 default_repeated_punctuation_colname = 'repeatedPunctuation'
 default_uppercase_words_colname = 'uppercaseWords'

 single_feature_names_dict = {default_urls_colname: 'url',
                              default_emojis_colname: 'emoji',
                              default_emoticons_colname: 'emoticon',
                              default_mentions_colname: 'mention',
                              default_hashtags_colname: 'hashtag',
                              default_badwords_colname: 'badword',
                              default_repeated_punctuation_colname: 'punctuation',
                              default_uppercase_words_colname: 'word'}

 default_posts_columns = ['date', 'text', 'author', 'created_utc', 'num_comments', 'over_18', 'is_self',
                          'score', 'stickied', 'subreddit', 'subreddit_id', 'post_id', 'author_flair_text']
 mapping_posts_columns = ['num_comments', 'over_18', 'is_self', 'score', 'stickied', 'post_id', 'subreddit',
                          'subreddit_id', 'author', 'author_flair_text']
 default_comments_columns = ['date', 'text', 'author', 'created_utc',
                             'score', 'stickied', 'subreddit', 'subreddit_id', 'comment_id', 'link_id', 'parent_id',
                             'author_flair_text']
 mapping_comments_columns = ['score', 'stickied', 'comment_id', 'link_id', 'parent_id', 'subreddit', 'subreddit_id',
                             'author', 'author_flair_text']

 default_textual_columns = ['text', default_urls_colname, default_emojis_colname, default_emoticons_colname,
                            default_mentions_colname, default_hashtags_colname, default_badwords_colname,
                            default_repeated_punctuation_colname, default_uppercase_words_colname, 'clean_text']
 default_texts_columns = ['text', 'clean_text']
 default_textblob_columns = ['textblob_sentences', 'textblob_tokens', 'textblob_tags',
                             'textblob_sentiment']
 default_detoxify_columns = ['detoxify_toxicity', 'detoxify_severe_toxicity', 'detoxify_obscene',
                             'detoxify_identity_attack', 'detoxify_insult', 'detoxify_threat',
                             'detoxify_sexual_explicit']
 default_spacy_columns = ['spacy_sentences', 'spacy_entities', 'spacy_pos_tag',
                          'spacy_sentiments']

 default_post_id_dict_variable = 'post_id_dict'
 default_comment_id_dict_variable = 'comment_id_dict'
 default_subreddit_int_dict_variable = 'subreddit_int_dict'
 default_subreddit_id_to_subreddit_dict_variable = 'subreddit_id_to_subreddit_dict'
 default_author_flair_dict_variable = 'author_flair_dict'
 default_author_dict_variable = 'author_dict'
 default_link_id_dict_variable = 'link_id_dict'
 default_parent_id_dict_variable = 'parent_id_dict'

 emoticons_list = [':)',
                   ':-)',
                   ':)',
                   ':-]',
                   ':]',
                   ':-3',
                   ':3',
                   ':->',
                   ':>',
                   '8-)',
                   '8)',
                   ':-}',
                   ':}',
                   ':o)',
                   ':c)',
                   ':^)',
                   '=]',
                   '=)',
                   ':-D',
                   ':D',
                   '8-D',
                   '8D',
                   'x-D',
                   'xD',
                   'X-D',
                   'XD',
                   '=D',
                   '=3',
                   'B^D',
                   ':-))',
                   ':-(',
                   ':(',
                   ':-c',
                   ':c',
                   ':-<',
                   ':<',
                   ':-[',
                   ':[',
                   ':-||',
                   '>:[',
                   ':{',
                   ':@',
                   '>:(',
                   "('_')",
                   '(/_;)',
                   '(T_T)',
                   '(;_;)',
                   '(;_;',
                   '(;_:)',
                   '(;O;)',
                   '(:_;)',
                   '(ToT)',
                   '(Ｔ▽Ｔ)',
                   ';_;',
                   ';-;',
                   ';n;',
                   ';;',
                   'Q.Q',
                   'T.T',
                   'TnT',
                   'QQ',
                   'Q_Q',
                   '(ー_ー)!!',
                   '(-.-)',
                   '(-_-)',
                   '(一一)',
                   '(；一_一)',
                   '＼(~o~)／',
                   '＼(^o^)／',
                   '＼(-o-)／',
                   'ヽ(^。^)ノ',
                   'ヽ(^o^)丿',
                   '(*^0^*)',
                   ":'-(",
                   ":'(",
                   ":'-)",
                   ":')",
                   "D-':",
                   'D:<',
                   'D:',
                   'D8',
                   'D;',
                   'D=',
                   'DX',
                   ':-O',
                   ':O',
                   ':-o',
                   ':o',
                   ':-0',
                   '8-0',
                   '>:O',
                   '(￣□￣;)',
                   '°o°',
                   '°O°',
                   ':O',
                   'o_0',
                   'o.O',
                   '(o.o)',
                   'oO',
                   ':-*',
                   ':*',
                   ':×',
                   ';-)',
                   ';)',
                   '*-)',
                   '*)',
                   ';-]',
                   ';]',
                   ';^)',
                   ':-,',
                   ';D',
                   ':-P',
                   ':P',
                   'X-P',
                   'XP',
                   'x-p',
                   'xp',
                   ':-p',
                   ':p',
                   ':-Þ',
                   ':Þ',
                   ':-þ',
                   ':þ',
                   ':-b',
                   ':b',
                   'd:',
                   '=p',
                   '>:P',
                   ':-/',
                   ':/',
                   ':-.',
                   '>:\\',
                   '>:/',
                   ':\\',
                   '=/',
                   '=\\',
                   ':L',
                   '=L',
                   ':S',
                   ':-|',
                   ':|',
                   ':$',
                   '://)',
                   '://3',
                   '(^^ゞ',
                   '(^_^;)',
                   '(-_-;)',
                   '(~_~;)',
                   '(・.・;)',
                   '(・_・;)',
                   '(・・;)^^',
                   ';^_^;',
                   '(#^.^#)',
                   '(^^;)',
                   ':-X',
                   ':X',
                   ':-#',
                   ':#',
                   ':-&',
                   ':&',
                   'O:-)',
                   'O:)',
                   '0:-3',
                   '0:3',
                   '0:-)',
                   '0:)',
                   '0;^)',
                   '>:-)',
                   '>:)',
                   '}:-)',
                   '}:)',
                   '3:-)',
                   '3:)',
                   '>;)',
                   '>:3',
                   '>;3',
                   ':‑J',
                   '#‑)',
                   '|;-)',
                   '|-O',
                   '%-)',
                   '%)',
                   ':-###..',
                   ':###.',
                   '<:-|',
                   '(>_<)',
                   '(>_<)>',
                   '((+_+))',
                   '(+o+)',
                   '(°°)',
                   '(°-°)',
                   '(°.°)',
                   '(°_°)',
                   '(°_°>)',
                   '(°レ°)',
                   '^_^',
                   '(°o°)',
                   '(^_^)/',
                   '(^O^)／',
                   '(^o^)／',
                   '(^^)/',
                   '(-∇-)/',
                   '(/-ヮ-)/',
                   '(^o^)丿',
                   '∩(·ω·)∩',
                   '(·ω·)',
                   '^ω^',
                   '"(-""-)"',
                   '(ーー゛)',
                   '(^_^メ)',
                   '(-_-メ)',
                   '(~_~メ)',
                   '(－－〆)',
                   '(・へ・)',
                   '(｀´)',
                   '<`～´>',
                   '<`ヘ´>',
                   '(ーー;)']

 meaning_list = ['smile',
                 'smile',
                 'smile',
                 'smile',
                 'smile',
                 'smile',
                 'smile',
                 'smile',
                 'smile',
                 'smile',
                 'smile',
                 'smile',
                 'smile',
                 'smile',
                 'smile',
                 'smile',
                 'smile',
                 'smile',
                 'laugh',
                 'laugh',
                 'laugh',
                 'laugh',
                 'laugh',
                 'laugh',
                 'laugh',
                 'laugh',
                 'laugh',
                 'laugh',
                 'laugh',
                 'very happy',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'sad',
                 'shame',
                 'shame',
                 'shame',
                 'shame',
                 'shame',
                 'exited',
                 'exited',
                 'exited',
                 'exited',
                 'exited',
                 'exited',
                 'crying',
                 'crying',
                 'tears happiness',
                 'tears happiness',
                 'disgust',
                 'disgust',
                 'disgust',
                 'disgust',
                 'disgust',
                 'disgust',
                 'disgust',
                 'shock',
                 'shock',
                 'shock',
                 'shock',
                 'shock',
                 'shock',
                 'shock',
                 'shock',
                 'shock',
                 'shock',
                 'o_o shock',
                 'shock',
                 'shock',
                 'shock',
                 'shock',
                 'kiss',
                 'kiss',
                 'kiss',
                 'smirk',
                 'smirk',
                 'smirk',
                 'smirk',
                 'smirk',
                 'smirk',
                 'smirk',
                 'smirk smirk',
                 'smirk smirk',
                 'cheeky smirk',
                 'cheeky',
                 'cheeky',
                 'cheeky',
                 'cheeky',
                 'cheeky',
                 'cheeky',
                 'cheeky',
                 'cheeky',
                 'cheeky',
                 'cheeky',
                 'cheeky',
                 'cheeky',
                 'cheeky',
                 'cheeky',
                 'cheeky',
                 'cheeky',
                 'annoyed',
                 'annoyed',
                 'annoyed',
                 'annoyed',
                 'annoyed',
                 'annoyed',
                 'annoyed',
                 'annoyed',
                 'annoyed',
                 'annoyed',
                 'annoyed',
                 'indecision annoyed',
                 'indecision',
                 'embarrassed',
                 'embarrassed',
                 'embarrassed',
                 'embarrassed',
                 'embarrassed',
                 'embarrassed',
                 'embarrassed',
                 'embarrassed',
                 'embarrassed',
                 'embarrassed',
                 'embarrassed',
                 'embarrassed',
                 'embarrassed',
                 'shut',
                 'shut',
                 'shut',
                 'shut',
                 'shut',
                 'shut',
                 'innocent',
                 'innocent',
                 'innocent',
                 'innocent',
                 'innocent',
                 'innocent',
                 'innocent',
                 'evil',
                 'evil',
                 'evil',
                 'evil',
                 'evil',
                 'evil',
                 'evil',
                 'evil',
                 'evil',
                 'tongue in cheek evil',
                 'party all night evil',
                 'cool',
                 'cool',
                 'drunk',
                 'drunk',
                 'sick',
                 'sick',
                 'dumb',
                 'troubled',
                 'troubled',
                 'confused',
                 'confused',
                 'confused',
                 'confused',
                 'confused',
                 'confused',
                 'confused',
                 'confused',
                 'joyful',
                 'joyful',
                 'joyful',
                 'joyful',
                 'joyful',
                 'joyful',
                 'joyful',
                 'joyful',
                 'joyful',
                 'joyful',
                 'joyful',
                 'joyful',
                 'worried',
                 'worried',
                 'worried',
                 'worried',
                 'worried',
                 'worried',
                 'worried',
                 'worried',
                 'worried',
                 'worried',
                 'worried']

 # emoticon_dict = dict(zip(emoticon_lst, meaning_lst))
 def get_emoticons_from_vader_lexicon(vader_lexicon_filename: str,
                                      return_scores: bool = False) -> list[str] or dict[str, float]:
  import pandas as pd
  import string
  with open(vader_lexicon_filename, 'r') as f:
   tmp_l = f.read().splitlines()
   f.close()

  vader_sentiment_dict = {e[0]: list(map(lambda elem: eval(elem), e[1:])) for e in
                          list(map(lambda x: x.split('\t'), tmp_l))}
  vader_sentiment_df = pd.DataFrame(index=vader_sentiment_dict.keys(), data=vader_sentiment_dict.values(),
                                    columns=['mean_score', 'std', 'scores'])
  vader_emoticons = vader_sentiment_df[(vader_sentiment_df.index.str.contains(r'[{}]'.format(string.punctuation))) | (
   vader_sentiment_df.index.str.lower().isin(['xd', 'xp']))].index.drop(
   ['once-in-a-lifetime', 'self-confident', 'short-sighted',
    'short-sightedness', 'son-of-a-bitch', 'sweet<3', '^urs', "can't stand", 'cover-up', 'aug-00', 'h&k', 'hho1/2k',
    'j/j', 'j/k', 'j/p', 'j/t', 'j/w', 'l&r', '0:03']).values
  emoticons_df = vader_sentiment_df.loc[vader_emoticons]
  if return_scores:
   from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer
   an = SentimentIntensityAnalyzer()
   emoticons_df = pd.concat([emoticons_df,
                             pd.Series(emoticons_df.index.map(lambda t: an.polarity_scores(t))).apply(
                              pd.Series).set_index(emoticons_df.index)]
                            , axis=1)
   return dict(*emoticons_df[['compound']].to_dict().values())
  return emoticons_df.index.values
 emoticons_list_vader = get_emoticons_from_vader_lexicon(return_scores=True, vader_lexicon_filename=vader_lexicon_file)

 badwords_LDNOOBW = ['2g1c', '2 girls 1 cup', 'alabama hot pocket', 'alaskan pipeline', 'anal',
                     'anilingus', 'apeshit', 'arsehole', 'ass', 'asshole', 'assmunch', 'baby batter', 'baby juice',
                     'ball gag', 'ball gravy', 'ball kicking', 'ball licking',
                     'ball sack', 'ball sucking', 'bareback', 'bastard', 'bastardo',
                     'bastinado', 'beaner', 'beaners', 'beaver cleaver', 'beaver lips', 'big knockers', 'big tits',
                     'bimbos',
                     'bitch', 'bitches', 'black cock', 'blowjob', 'blow job', 'blow your load', 'blue waffle',
                     'blumpkin', 'bollocks', 'boner', 'boob', 'boobs', 'brown showers',
                     'bukkake', 'bulldyke', 'bullshit', 'bung hole', 'bunghole', 'busty', 'butt',
                     'buttcheeks', 'butthole', 'camel toe', 'camslut', 'camwhore', 'carpet muncher',
                     'carpetmuncher', 'chocolate rosebuds', 'circlejerk', 'cleveland steamer', 'clit',
                     'clusterfuck', 'cock', 'cocks', 'coprolagnia', 'coprophilia', 'cornhole',
                     'coon', 'coons', 'creampie', 'cum', 'cumming', 'cumshot', 'cumshots', 'cunnilingus', 'cunt',
                     'darkie',
                     'date rape', 'daterape', 'deep throat', 'deepthroat', 'dick', 'dingleberry',
                     'dingleberries', 'dirty pillows', 'dirty sanchez', 'doggie style', 'doggiestyle', 'doggy style',
                     'doggystyle', 'dog style', 'dommes', 'donkey punch', 'double penetration', 'dp action', 'dry hump',
                     'dvda',
                     'eat my ass', 'fag', 'faggot', 'felch', 'feltch', 'female squirting', 'fingerbang', 'fisting',
                     'frotting', 'fuck', 'fuck buttons', 'fuckin', 'fucking', 'fucktards', 'fudge packer',
                     'fudgepacker', 'gangbang',
                     'gang bang', 'goatcx', 'goatse', 'god damn', 'gokkun', 'golden shower', 'goodpoop', 'goregasm',
                     'hand job', 'handjob', 'honkey', 'hooker', 'hot carl', 'huge fat', 'humping', 'jack off',
                     'jail bait', 'jailbait',
                     'jelly donut', 'jerk off', 'jigaboo', 'jiggaboo', 'jiggerboo', 'jizz', 'juggs', 'kike', 'kinkster',
                     'kinky',
                     'knobbing', 'make me come', 'male squirting', 'masturbate', 'masturbating', 'masturbation',
                     'mong', 'motherfucker', 'muff diver', 'muffdiving', 'negro', 'nigga', 'nigger', 'nig nog',
                     'nutten', 'octopussy', 'one cup two girls', 'one guy one jar', 'paedophile', 'paki', 'pedobear',
                     'pedophile', 'phone sex', 'piece of shit', 'pikey', 'pissing', 'piss pig', 'pisspig',
                     'pole smoker',
                     'poof', 'poon', 'poontang', 'punany', 'poop chute', 'poopchute', 'pthc', 'pussy', 'queaf',
                     'queef', 'quim', 'raghead', 'raging boner', 'rimjob', 'rimming',
                     'rosy palm', 'rusty trombone', 'scat', 'schlong', 'shaved beaver', 'shaved pussy', 'shemale',
                     'shit', 'shitblimp', 'shitty', 'shota', 'shrimping', 'skeet', 'slanteye', 'slut',
                     'snowballing', 'spastic', 'spic', 'splooge', 'splooge moose', 'spooge', 'spunk',
                     'suck', 'sucks', 'suicide girls', 'swastika', 'tea bagging', 'throating', 'thumbzilla',
                     'tit', 'tits', 'titties', 'titty', 'tosser', 'towelhead', 'tranny',
                     'tub girl', 'tubgirl', 'tushy', 'twat', 'two girls one cup', 'upskirt', 'urethra play',
                     'wank', 'wetback', 'whore', 'wrinkled starfish', 'yellow showers', 'zoophilia', 'ðŸ–•']

 for v in locals().copy():
  globals()[v]=locals()[v]





if not initialized:
 initialize()
 initialized = True
#for var in curr_vars:
# globals()[var] = curr_vars[var]